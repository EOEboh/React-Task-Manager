{"version":3,"sources":["components/Button.js","components/Header.js","components/AddForm.js","components/Task.js","components/Tasks.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","showForm","location","useLocation","pathname","name","AddForm","onAdd","useState","setText","day","setDay","reminder","setReminder","position","toast","POSITION","TOP_RIGHT","type","placeholder","value","onChange","e","target","checked","currentTarget","preventDefault","success","error","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","size","Tasks","tasks","map","About","to","Footer","Date","getFullYear","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","taskGottenFromServer","getTasks","fetch","res","json","data","AddTask","method","headers","body","JSON","stringify","deleteTask","filter","fetchTask","toggleReminder","taskToToggle","updTask","length","path","exact","render","props","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00b5e050.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Button({color,text, onClick}) {\r\n\r\n    return (\r\n        <div>\r\n           <button style = {{backgroundColor: color}} \r\n           onClick={onClick} className='Add-btn' >\r\n               {text}\r\n           </button> \r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: 'yeah',\r\n    color: 'black'\r\n}\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({title, showForm}) => {\r\n\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className='header'>\r\n           <h1>\r\n               {title}  \r\n           </h1> \r\n           {/* values for color and text */}\r\n          { location.pathname ==='/' && <Button color='#4b4b4b' text= 'Add' onClick={showForm} />}\r\n        </div>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'Task Manager',\r\n    name: 'Onyeka'\r\n}\r\nexport default Header\r\n","\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\n// React-Toastify notification library\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst AddForm = ({onAdd}) => {\r\nconst [ text, setText ] = useState('')\r\nconst [ day, setDay ] = useState('')\r\nconst [ reminder, setReminder ] = useState(false)\r\n\r\n// creating an onSubmit function with form validation and etc\r\nconst onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!text) {\r\n        toast.error(\"Please, add a task\")\r\n        return\r\n    }else{\r\n        toast.success(\"You've successfully added a task\")\r\n    }\r\n     \r\n    // then we call the onAdd function with texts, day and reminder as values\r\n    onAdd({ text, day, reminder})\r\n\r\n    // clear all inputs afterwards\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div> \r\n          {/* container for react-toastify */}\r\n          <ToastContainer position={toast.POSITION.TOP_RIGHT}/> \r\n\r\n        <form className='form-style '>\r\n            <div className='task-style'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add a task' \r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='day-style'>\r\n                <label>Day and Time</label>\r\n                <input type='datetime-local' \r\n                value={day}\r\n                onChange={ (e) => setDay(e.target.value) } />\r\n            </div>\r\n            <div className='reminder-style'>\r\n                <label className='reminder-label'>Set Reminder</label>\r\n                <input type='checkbox' \r\n                value={reminder}\r\n                checked={reminder}\r\n                onChange={ (e) => setReminder(e.currentTarget.checked)}/>\r\n                \r\n            </div>\r\n            <div className='submit-btn'>\r\n                <input type=\"submit\" value='Save Task' onClick={onSubmit}/>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","import React from 'react' \r\nimport { FaTrash } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'toggleTask FaTrash' : 'toggleTask2'}`} onDoubleClick={() => onToggle(task.id)} >\r\n            <h3>\r\n            {task.text} <FaTrash style={{cursor: 'pointer', color: 'red'}} size='1rem'\r\n            // onClick event to delete task, passed as props(onDelete) to app.js\r\n            onClick={ () => onDelete(task.id)} /> \r\n            </h3> \r\n            <p>\r\n                {task.day}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n ","import React from 'react'\r\nimport Task from './Task'\r\n\r\n                                        \r\n\r\nfunction Tasks({tasks, onDelete, onToggle}) {\r\n    return (\r\n        <div>\r\n           {\r\n            // passing the props value\r\n               tasks.map((task) =>( \r\n               <Task\r\n               \r\n                task={task}\r\n                onDelete={onDelete} \r\n                onToggle ={onToggle}/>) )\r\n           } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h2>Version 1.0</h2>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <h3>Copyright\r\n           &copy; {new Date().getFullYear()}\r\n           </h3>\r\n           <Link to='/about'>About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './index.css';\nimport Header  from './components/Header';\nimport AddForm from './components/AddForm';\nimport Tasks from './components/Tasks';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport { useState, useEffect } from 'react';\nimport { Routes, Route} from 'react-router-dom'\n\n\n\nfunction App() {\n// tasks = name of array (state)\n// setTasks = function to update the state\n\n// state for toggling addform\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [ tasks, setTasks] = useState([])\n\n\n  \n  useEffect( () => {\n    const getTasks = async () => {\n      const taskGottenFromServer = await fetchTasks()\n      setTasks(taskGottenFromServer)\n    }\n\n\n    getTasks()\n  }, [])\n\n\n  // fetch tasks from backend\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n    return data\n  }\n  \n// add function to add new task to the state\n\nconst AddTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n  const data = await res.json()\n  setTasks([...tasks, data])\n    \n}\n\n//delete function\n const deleteTask = async (id) => {\n   await fetch(`http://localhost:5000/tasks/${id}`, {\n     method: 'DELETE'\n   })\n\n  //  deletes from UI\n   setTasks( tasks.filter( (task) => task.id !== id))\n }\n\n\n\n// fetching a single task to toggle   \nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = res.json()\n\n  return data\n}\n    \n\n\n\n\n// toggleReminder function \nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {\n    ...taskToToggle, reminder: !taskToToggle.reminder \n  }\n\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, \n  {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  }\n  ,\n  )\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task)=> \n      task.id === id ? {...task, reminder: data.reminder} : task\n    )\n  )\n}\n\n\n  return (\n     \n    <div className=\"container\">\n      <Header showForm={ () => setShowAddTask(!showAddTask)}/>\n      {showAddTask && <AddForm onAdd={AddTask}/>}\n        \n      {/* passing down props to Tasks*/}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No tasks available' }\n      \n      \n    <Routes> <Route path='/' exact  render={ (props) => (\n      <>\n      </>\n    )} /> </Routes>\n    \n<Routes><Route path='/about' element={<About />}/></Routes>\n      <Footer/>\n    </div>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}